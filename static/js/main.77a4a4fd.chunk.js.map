{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onClick","selectedTodoId","className","map","todo","classNames","id","completed","title","type","TodoFilter","onChange","onSearch","selectValue","query","value","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","defaultTodo","useState","name","email","phone","user","setUser","userId","useEffect","getUser","href","App","visibleTodos","setVisibleTodos","selectedTodo","setSelectedTodo","isModalVisible","setModalVisability","setSelectValue","setQuery","searchedTodos","filter","toLowerCase","includes","handleClick","isClicked","a","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77a4a4fd.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onClick: (variable: boolean, todo: Todo) => void;\n  selectedTodoId: number;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onClick,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames('', {\n              'has-background-info-light': selectedTodoId === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onClick(true, todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={selectedTodoId === todo.id\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  onChange: (selectValue: string) => void\n  onSearch: (query: string) => void\n  selectValue: string,\n  query: string\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChange,\n  onSearch,\n  selectValue,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={(e) => {\n              onChange(e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => {\n            onSearch(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onSearch('');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  onClick: (variable: boolean, todo: Todo) => void;\n  defaultTodo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClick, defaultTodo }) => {\n  const [user, setUser] = useState({\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  });\n\n  const {\n    id,\n    completed,\n    title,\n    userId,\n  } = todo;\n\n  const { email, name } = user;\n\n  useEffect(() => {\n    getUser(userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!name ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onClick(false, defaultTodo);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              &nbsp;by&nbsp;\n\n              <a href={`mailto:${email}`}>\n                {name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const defaultTodo = {\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  };\n\n  const [visibleTodos, setVisibleTodos] = useState([defaultTodo]);\n  const [selectedTodo, setSelectedTodo] = useState(defaultTodo);\n  const [isModalVisible, setModalVisability] = useState(false);\n  const [value, setSelectValue] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(setVisibleTodos);\n  }, []);\n\n  const filteredTodos = visibleTodos.filter(todo => {\n    switch (value) {\n      case 'all':\n        return todo;\n      case 'completed':\n        return todo.completed === true;\n      case 'active':\n        return todo.completed === false;\n      default:\n        return todo;\n    }\n  });\n\n  const searchedTodos = filteredTodos.filter((todo) => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n  const handleClick = async (isClicked: boolean, todo: Todo) => {\n    setModalVisability(isClicked);\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChange={setSelectValue}\n                onSearch={setQuery}\n                selectValue={value}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos[0] === defaultTodo\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={searchedTodos}\n                    onClick={handleClick}\n                    selectedTodoId={selectedTodo.id}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalVisible && (\n        <TodoModal\n          todo={selectedTodo}\n          onClick={handleClick}\n          defaultTodo={defaultTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}