{"version":3,"sources":["types/Filters.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filters","TodoList","todos","onClick","selectedTodo","id","className","map","todo","classNames","completed","title","type","TodoFilter","onChange","onSearch","selectValue","query","value","e","target","All","Active","Completed","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","name","email","phone","user","setUser","userId","useEffect","getUser","href","App","setTodos","setSelectedTodo","setSelectValue","setQuery","searchedTodos","filter","toLowerCase","includes","handleClick","length","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.391b33b4.chunk.js","sourcesContent":["export enum Filters {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onClick: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onClick,\n  selectedTodo,\n}) => {\n  const id = selectedTodo?.id;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onClick(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={id === todo.id\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Filters } from '../../types/Filters';\n\ntype Props = {\n  onChange: (selectValue: string) => void\n  onSearch: (query: string) => void\n  selectValue: string,\n  query: string\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChange,\n  onSearch,\n  selectValue,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={(e) => {\n              onChange(e.target.value);\n            }}\n          >\n            <option value={Filters.All}>All</option>\n            <option value={Filters.Active}>Active</option>\n            <option value={Filters.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => {\n            onSearch(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onSearch('');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  onClick: (todo: null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClick }) => {\n  const [user, setUser] = useState({\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  });\n\n  const {\n    id,\n    completed,\n    title,\n    userId,\n  } = todo;\n\n  const { email, name } = user;\n\n  useEffect(() => {\n    if (userId > 0) {\n      getUser(userId).then(setUser);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!name ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onClick(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              &nbsp;by&nbsp;\n\n              <a href={`mailto:${email}`}>\n                {name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Filters } from './types/Filters';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [value, setSelectValue] = useState<string>(Filters.All);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const filteredTodos = todos.filter(todo => {\n    switch (value) {\n      case Filters.All:\n        return todo;\n      case Filters.Completed:\n        return todo.completed;\n      case Filters.Active:\n        return !todo.completed;\n      default:\n        return todo;\n    }\n  });\n\n  const searchedTodos = filteredTodos.filter((todo) => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n  const handleClick = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleFilter = (filter: string) => {\n    setSelectValue(filter);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChange={handleFilter}\n                onSearch={setQuery}\n                selectValue={value}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={searchedTodos}\n                    onClick={handleClick}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n              {!searchedTodos.length && todos.length > 0 && (\n                <h1 style={{ color: 'red' }}>\n                  Unable to find any todos match your request\n                </h1>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClick={handleClick}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}